{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "3997e3fe-fee3-4ca4-abca-233fd0da4108": {
        "id": "3997e3fe-fee3-4ca4-abca-233fd0da4108",
        "parent": null,
        "name": "hash-tag-counter",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "da1d74a0-ff68-4c27-b504-26a1c9e272ec",
          "c0f71961-d190-499a-ad22-5cd3245044ce"
        ],
        "isRemovable": false,
        "filePath": "hash-tag-counter"
      },
      "da1d74a0-ff68-4c27-b504-26a1c9e272ec": {
        "id": "da1d74a0-ff68-4c27-b504-26a1c9e272ec",
        "parent": "3997e3fe-fee3-4ca4-abca-233fd0da4108",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hash-tag-counter/lambda.js",
        "code": "let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = function (event, context, callback) {\n\n\tconsole.log(\"Received hash tag message event\", event);\n\t\n\tevent.Records.forEach(function (record) {\n\t\tlet payload = new Buffer(record.kinesis.data, 'base64').toString('ascii');\n\t\tlet payloadObj = JSON.parse(payload);\n\t\tconsole.log('Decoded payload successfully :', payload);\n\n\t\tlet application = payloadObj.Application;\n\t\tlet hashTags = payloadObj.HashTags;\n\t\tconsole.log('Decoded Application : ' + application + ' and hashtags : ' + hashTags);\n\t\t\n\t\thashTags.forEach(hashTag => {\n\t\t\tlet currentCount = 0;\n\t\t\tddb.get({\n\t\t\t\tTableName: 'HashTags',\n\t\t\t\tKey: { 'Application': application, 'HashTag': hashTag },\n\t\t\t\tAttributesToGet: [\n\t\t\t\t\t'Count'\n\t\t\t\t]\n\t\t\t}, function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log('Error while getting the existing count for the hashtag : ' + hashTag + ' and application : ' + \n\t\t\t\t\t\tapplciation, err);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Successfully fetched the existing row for hashtag : ' +  hashTag + ' in application : ' + \n\t\t\t\t\t\tapplication, data);\n\t\t\t\t\tlet currentCount = data.Item ? data.Item.Count + 1 : 1;\n\n\t\t\t\t\tddb.put({\n\t\t\t\t\t\tTableName: 'HashTags',\n\t\t\t\t\t\tItem: { 'Application': application, 'HashTag': hashTag, 'Count': currentCount }\n\t\t\t\t\t}, function (err, data) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tconsole.log('Error while updating the hashcount for hashtag : ' + hashTag +' and application : ' + \n\t\t\t\t\t\t\tapplciation, err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log('Successfully updated the hashtag count to : ' + currentCount + ' for hashtag : ' + \n\t\t\t\t\t\t\t\thashTag + ' in application : ' + application, data);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\n\t});\n\n\tcallback(null, 'Successfully executed');\n}",
        "triggers": [
          {
            "resourceName": "kinesishashTagStream",
            "config": {
              "StartingPosition": "TRIM_HORIZON",
              "BatchSize": 100
            }
          }
        ],
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        }
      },
      "c0f71961-d190-499a-ad22-5cd3245044ce": {
        "id": "c0f71961-d190-499a-ad22-5cd3245044ce",
        "parent": "3997e3fe-fee3-4ca4-abca-233fd0da4108",
        "name": "push-test-data.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hash-tag-counter/push-test-data.js",
        "code": "let AWS = require('aws-sdk');\nconst kinesis = new AWS.Kinesis();\n\nexports.handler = function (event, context, callback) {\n\n\tconsole.log(\"Receiveed messages for hash tags\", event.body);\n\n\tlet hashTagMessages = JSON.parse(event.body).HashTagData;\n\thashTagMessages.forEach(hashTagMessage => {\n\t\tlet message = JSON.stringify(hashTagMessage);\n\t\tconsole.log(\"HashTag message\", message)\n\t\tkinesis.putRecord({\n\t\t\tData: message,\n\t\t\tPartitionKey: 'SocialMedia',\n\t\t\tStreamName: 'hash-tag-stream'\n\t\t}).promise()\n\t\t\t.then(putRecordData => {\n\t\t\t\tconsole.log(\"Push message successfully to hash-tag-stream with response\", putRecordData);\n\t\t\t\tlet response = {\n\t\t\t\t\t'statusCode': 200,\n\t\t\t\t\t'headers': {\n\t\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\t'body': JSON.stringify({\n\t\t\t\t\t\t'Code': 'Success',\n\t\t\t\t\t\t'Message': 'Hash tag records are successfully populated to hash-tag-stream',\n\t\t\t\t\t\t'Data': putRecordData\n\t\t\t\t\t}),\n\t\t\t\t\t'isBase64Encoded': false\n\t\t\t\t};\n\t\t\t\tcallback(null, response);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(\"Error while pushing message to hash-tag-stream with response\", err);\n\t\t\t\tlet response = {\n\t\t\t\t\t'statusCode': err.statusCode,\n\t\t\t\t\t'headers': {\n\t\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\t'body': JSON.stringify({\n\t\t\t\t\t\t'Code': err.code,\n\t\t\t\t\t\t'Message': err.message\n\t\t\t\t\t}),\n\t\t\t\t\t'isBase64Encoded': false\n\t\t\t\t};\n\t\t\t\tcallback(null, response);\n\t\t\t});\n\t})\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1populateHashTagDataProxypopulatepost",
            "config": {}
          }
        ],
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        }
      }
    },
    "deletedFiles": [],
    "rootNode": "3997e3fe-fee3-4ca4-abca-233fd0da4108",
    "openFiles": [
      "da1d74a0-ff68-4c27-b504-26a1c9e272ec",
      "c0f71961-d190-499a-ad22-5cd3245044ce"
    ],
    "currentFileId": "da1d74a0-ff68-4c27-b504-26a1c9e272ec",
    "resources": {
      "ddbHashTags": {
        "name": "ddbHashTags",
        "type": "DynamoDB",
        "config": {
          "mode": 0,
          "operation": "get",
          "table": {
            "arn": "",
            "name": "HashTags",
            "partitionKey": "Application",
            "partitionKeyType": "S",
            "hasSortKey": true,
            "sortKey": "HashTag",
            "sortKeyType": "S",
            "mode": 0
          },
          "isGlobalEditMode": false,
          "parameters": {
            "Key": {
              "Application": "ss",
              "HashTag": "dsds"
            },
            "Item": {},
            "ExpressionAttributeValues": {}
          },
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        },
        "globallyEditable": false
      },
      "kinesishashTagStream": {
        "name": "kinesishashTagStream",
        "type": "Kinesis",
        "config": {
          "mode": 0,
          "StreamName": "hash-tag-stream",
          "shards": 1,
          "region": "us-east-1",
          "triggerParams": {
            "StartingPosition": "TRIM_HORIZON",
            "BatchSize": 100
          }
        },
        "globallyEditable": true
      },
      "apigusEast1populateHashTagDataProxypopulatepost": {
        "name": "apigusEast1populateHashTagDataProxypopulatepost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "populate-hash-tag-data-proxy",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "populate",
          "resourcePath": "/populate",
          "restMethod": "POST",
          "proxyIntegration": true,
          "enableCORS": true,
          "stageMode": 0,
          "stageName": "Prod"
        },
        "globallyEditable": true
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "editable": false,
        "shouldPersist": false,
        "displayOnly": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "version": "2.176.0",
          "notRemovable": true,
          "language": "javascript",
          "dev": true
        },
        "slappforge-sdk": {
          "name": "@slappforge/slappforge-sdk",
          "version": "0.0.3",
          "notRemovable": true,
          "types": "\n                    declare class RDSQueryParams {\n    instanceIdentifier: string;\n    query: string;\n    inserts: Array<any>\n}\n\ndeclare namespace SL.AWS {\n    class RDS {\n        query(params: RDSQueryParams, callback: Function, connection: any): void;\n\n        beginTransaction(params: any, callback: Function): void;\n    }\n\n    class SQS {\n        receiveAndDeleteMessages(params: any, filteringCallBack: Function, deleteCallBack: Function, errorCallBack: Function): void;\n    }\n}\n",
          "language": "javascript"
        }
      }
    },
    "lambdaId": "da1d74a0-ff68-4c27-b504-26a1c9e272ec",
    "additionalFiles": []
  },
  "PROJECT_META": {
    "projectName": "hash-tag-counter",
    "projectDescription": "Counting hash tags of social media posts",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1566293332586
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "my-hash-tag-counter",
      "url": "https://github.com/sigmavcs/my-hash-tag-counter"
    }
  }
}